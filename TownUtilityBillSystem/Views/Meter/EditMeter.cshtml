@model TownUtilityBillSystem.Models.Meter

@{
    ViewBag.Title = "EditMeter";
}
<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

<h2><strong>Edit meter</strong></h2>

@using (Html.BeginForm("EditMeter", "Meter", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VarificationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VarificationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VarificationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MeterType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MeterType.Id, new SelectList(Model.MeterTypes, "Id", "Name"), "--Select type--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeterType.Id)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary btn-large btn-block" />
            </div>
        </div>
        @if (Model.MeterType.Id != 0)
        {
            Model.MeterType.VarificationPeriod = 1;
            Model.MeterType.Utility.Name = "Foo";
            Model.MeterType.Utility.Price = 1;
            Model.MeterType.Utility.BigUsagePrice = 1;
            Model.MeterType.Utility.UsageForStandartPrice = 1;
            <div style="visibility: hidden">
                @Html.EditorFor(model => model.MeterType.VarificationPeriod, new { htmlAttributes = new { @class = "form-control" } })    
                @Html.EditorFor(model => model.MeterType.Utility.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.EditorFor(model => model.MeterType.Utility.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.EditorFor(model => model.MeterType.Utility.BigUsagePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.EditorFor(model => model.MeterType.Utility.UsageForStandartPrice, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        }
    </div>
}

<a href="javascript:history.go(-1)" class="btn btn-link btn-large">
    <span class=" glyphicon glyphicon-arrow-left"></span> <strong>Back to previous page</strong>
</a>
