@model TownUtilityBillSystem.Models.MeterModel

@{
    ViewBag.Title = "ShowFoundMeters";
    int rowNumber = 1;
}

<style>
    mark {
        background-color: yellow;
        color: black;
    }
</style>

@if (Model.Meters.Count == 0)
{
    <h2>No any meter is found</h2>
}

else if (Model.Meters.Count == 1)
{
    <h2>Found 1 meter</h2>
}
else
{
    <h2>Found @Model.Meters.Count meters</h2>
}

<h4>Search filter: <mark> <strong> @ViewBag.SearchString </strong></mark></h4>
@if (Model.Meters.Count != 0)
{
    <table class="table">
        <tr>
            <th>#</th>
            <th>Serial #</th>
            <th>Type</th>
            <th>Utility</th>
            <th>Release</th>
            <th>Varification</th>
            <th>Index</th>
            <th>Town</th>
            <th>Street</th>
            <th>Building</th>
            <th>Flat/Part</th>
            <th>Options</th>
        </tr>


        @foreach (var item in Model.Meters)
        {
            <tr>
                <td>@(rowNumber++)</td>
                <td>
                    @Html.DisplayFor(model => item.SerialNumber)
                </td>
                <td>
                    @Html.DisplayFor(model => item.MeterType.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => item.MeterType.Utility.Name)
                </td>
                <td>
                    @item.ReleaseDate.Year.ToString()<text>-</text>@item.ReleaseDate.Month.ToString()<text>-</text>@item.ReleaseDate.Day
                </td>
                <td>
                    @item.VarificationDate.Year.ToString()<text>-</text>@item.VarificationDate.Month.ToString()<text>-</text>@item.VarificationDate.Day
                </td>
                <td>
                    @Html.DisplayFor(model => item.Address.Index.Value)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Address.Town.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Address.Street.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Address.Building.Number)
                </td>

                @if (item.Address.FlatPart == null)
            {
            <td>
                <text>--</text>
            </td>
            }
            else if (!String.IsNullOrEmpty(item.Address.FlatPart.Name))
            {
            <td>
                @Html.DisplayFor(model => item.Address.FlatPart.Name)
            </td>
            }
            else if (item.Address.FlatPart.Number != 0 && !String.IsNullOrEmpty(item.Address.FlatPart.Number.ToString()))
            {
            <td>
                @Html.DisplayFor(model => item.Address.FlatPart.Number)
            </td>
            }
                <td>
                    @Html.ActionLink("Edit", "EditMeter", new { meterId = item.Id }) |
                    @Html.ActionLink("Data", "ShowMeterData", new { meterId = item.Id }) |
                    @Html.ActionLink("Delete", "DeleteMeter", new { meterId = item.Id })
                </td>
            </tr>
        }
    </table>
}

<a href="@Url.Action("FindMetersBy", "Meter")" class="btn btn-link btn-large">
    <span class=" glyphicon glyphicon-list"></span> <strong>Back to list</strong>
</a>
<br />
<a href="javascript:history.go(-1)" class="btn btn-link btn-large">
    <span class=" glyphicon glyphicon-arrow-left"></span> <strong>Back to previous page</strong>
</a>

