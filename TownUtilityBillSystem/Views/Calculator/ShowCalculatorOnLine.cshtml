@model TownUtilityBillSystem.Models.CalculatorItemModel

@{
    ViewBag.Title = "ShowCalculatorOnLine";
    int rowNumber = 1;
    int i = 0;
}

<div class="jumbotron">
    <h3><strong>Calculator on-line</strong></h3>
    <h4><strong>Enter utility month usage</strong></h4>
    @using (Html.BeginForm("ShowCalculatorOnLine", "Calculator", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        if (ViewBag.ErrorMessage != "" || ViewBag.ErrorMessage != null)
        {
            <p style="color:red"> @ViewBag.ErrorMessage</p>
        }
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <p class="control-label col-md-3"><strong>@Model.Utilities[i].Name (@Model.Utilities[i].Unit.Name)</strong></p>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ElectricUsage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ElectricUsage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p class="control-label col-md-3"><strong>@Model.Utilities[++i].Name (@Model.Utilities[i].Unit.Name)</strong></p>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.WaterUsage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WaterUsage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p class="control-label col-md-3"><strong>@Model.Utilities[++i].Name (@Model.Utilities[i].Unit.Name)</strong></p>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.HeatUsage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HeatUsage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p class="control-label col-md-3"><strong>@Model.Utilities[++i].Name (@Model.Utilities[i].Unit.Name)</strong></p>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.GasUsage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GasUsage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    <input type="submit" value="Calculate the charges" class="btn btn-primary btn-large btn-block" />
                </div>
            </div>
        </div>
    }
    <h4><strong>Utilities prices</strong> </h4>
    <div id="utilitiesPricesId" name="utilitiesPrices">
        <table class="table" id="utilityId">
            <tr>
                <th>#</th>
                <th>Icon</th>
                <th>Name</th>
                <th>Price</th>
                <th>per Unit</th>
                <th>Usage for standart price</th>
                <th>Higher price</th>
            </tr>

            @foreach (var item in Model.Utilities)
            {
                <tr>
                    <td>@(rowNumber++)</td>
                    <td> <img src=@item.ImageIconPath style="width:auto; height:30px" />  </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price) <text> @Model.Currency</text>
                    </td>
                    <td>
                        <text>  per 1 @item.Unit.Name </text>
                    </td>
                    <td>
                        @if (item.UsageForStandartPrice == 0)
                        {
                            <text>--</text>
                        }
                        else
                        {
                            <text>@item.UsageForStandartPrice @item.Unit.Name</text>
                        }
                    </td>
                    <td>
                        @if (item.BigUsagePrice == 0)
                        {
                            <text>--</text>
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.BigUsagePrice) <text> @Model.Currency</text>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>

    <hr />
    <a href="javascript:history.go(-1)" class="btn btn-link btn-large">
        <span class=" glyphicon glyphicon-arrow-left"></span> <strong>Back to previous page</strong>
    </a>
</div>





