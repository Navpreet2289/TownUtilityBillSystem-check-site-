@model TownUtilityBillSystem.Models.AddressModel
@{
    ViewBag.Title = "ShowTemperatureChart";
}

<img src=@ViewBag.ImageIconPath style="width:auto; height:40px" />
<font size="6"> <strong>Temperature chart</strong></font>
<br />
<br />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>

<link rel="stylesheet" href="/Content/myStyles.css" />

<div class="form-group">
    @if (ViewBag.TownList != null)
            {
        @Html.DropDownListFor(model => model.Town.Id, ViewBag.TownList as SelectList, "--Select town--", new { @class = "form-control" })
    }
</div>

<div id="chartArear" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="map-canvas" class="map-canvasForTemperatureView"></div>

<script>
    $(document)
        .ready(function () {
            $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetTemperatureChartData")',
                    dataType: "json",
                    success: function (data) { 
                        createChart("#chartArea", "Average temperature per year for Copenhagen", data);
                    }
                });


            $("#Town_Id").change(function () {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetTemperatureChartData")',
                    data: { townId: $("#Town_Id").val() },
                    dataType: "json",
                    success: function (data) {
                        createChart("#chartArea", "Average temperature per year", data);
                    }
                });
            })
        });
    function createChart(chartcontainer, title, data) {
        Highcharts.chart('chartArear', {
            chart: {
                type: 'column'
            },
            title: {
                text: title
            },
            xAxis: {
                categories: [
                    data[0].MonthName,
                    data[1].MonthName,
                    data[2].MonthName,
                    data[3].MonthName,
                    data[4].MonthName,
                    data[5].MonthName,
                    data[6].MonthName,
                    data[7].MonthName,
                    data[8].MonthName,
                    data[9].MonthName,
                    data[10].MonthName,
                    data[11].MonthName,                    
                ],
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Temperature, , °C',
                    align: 'high'
                },
                labels: {
                    overflow: 'justify'
                }
            },
            tooltip: {
                valueSuffix: ' °C'
            },
            plotOptions: {
                bar: {
                    dataLabels: {
                        enabled: true
                    }
                }
            },
            legend: {
                enabled: false,
            },
            credits: {
                enabled: false
            },
            series: [{
                name: 'Temperature',
                 data: [
                    [data[0].MonthName, data[0].AverageValue],
                    [data[1].MonthName, data[1].AverageValue],
                    [data[2].MonthName, data[2].AverageValue],
                    [data[3].MonthName, data[3].AverageValue],
                    [data[4].MonthName, data[4].AverageValue],
                    [data[5].MonthName, data[5].AverageValue],
                    [data[6].MonthName, data[6].AverageValue],
                    [data[7].MonthName, data[7].AverageValue],
                    [data[8].MonthName, data[8].AverageValue],
                    [data[9].MonthName, data[9].AverageValue],
                    [data[10].MonthName, data[10].AverageValue],
                    [data[11].MonthName, data[11].AverageValue]                    
                ],
                 dataLabels: {
                     enabled: true,
                     rotation: -90,
                     color: '#aaaaa',
                     align: 'right',
                     format: '{point.y:.1f}', // one decimal
                     y: -35, // 10 pixels down from the top
                     style: {
                         fontSize: '13px',
                         fontFamily: 'Verdana, sans-serif'
                     }
                 }
            }]
        });
    }
</script>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC7oyKXdpaKqurqotVj7_bhl9V9_7B5cMQ&libraries=places"
        type="text/javascript"></script>

<script>
    var map = new google.maps.Map(document.getElementById('map-canvas'), {
        center: {
            lat: 55.60,
            lng: 10.9
        },
        zoom: 7
    });
    var marker = new google.maps.Marker({
        position: {
            lat: 55.6877,
            lng: 12.5839
        },
        map: map,
        draggable: true
    });
    var country = "Denmark";
    var town;

    var mapDiv;
    var address;
    var geocoder;
    var mapTownZoom = 8;

    $(document).ready(function () {
        $("#Town_Id").change(function () {
            $.ajax({
                type: "GET",
                url: '/Meter/GetTownName',
                data: { townId: $("#Town_Id").val() },
                success: function (data) {
                    town = data;
                    mapDiv = document.getElementById('map-canvas');
                    address = town + country;
                    geocoder = new google.maps.Geocoder();

                    geocoder.geocode({
                        "address": address
                    }, function (results, status) {
                        map = new google.maps.Map(mapDiv, {
                            center: results[0].geometry.location,
                            zoom: mapTownZoom,
                            mapTypeId: google.maps.MapTypeId.ROADMAP,
                        })
                        marker = new google.maps.Marker({
                            position: results[0].geometry.location,
                            map: map,
                            draggable: true
                        });
                    });
                }
            });
        })
    });
</script>




